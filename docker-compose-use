#!/bin/env bash
# Run this preprocessor when the configuration changes to
# regenerate the .env file for docker-compose
# 
# 1) cd to the directory where your configuration files are.
# 2) Invoke the specific `docker-compose-use` that belongs to your Angelbox instance
#       you may have more than one!

set -uex

ANGELBOX_DIR=$(readlink -f "${BASH_SOURCE[0]%/*}")

# Parameter 1 : The source *.env file (comments and blank lines allowed)
SERVICES="${1:-angelbox.env}"

# Parameter 2 : A second source *.env file providing server specific environment values
VALUES="${2:-/etc/angelbox/server.env}"

# Parameter 3 : The output file (default .env) - for testing
out="${3:-$ANGELBOX_DIR/.env}"

# Temporary files
rand=$RANDOM
tmpA="/tmp/dcu-${rand}a"
tmpB="/tmp/dcu-${rand}b"
tmpC="/tmp/dcu-${rand}c"

#Header
echo "##From: $SERVICES" > "$tmpA"

# Step 1. Whitespace is trimmed
sed -E 's/^ *//;s/ *$//' "$SERVICES" >> "$tmpA"

# Step 2. Lines with a single '#' are removed completely)
# This allows commenting to work within a series of \ separated lines
# not conventional, but more readable
## lines will survive this filter.

grep -vE "^#([^#]|$)" "$tmpA" > "$tmpB"

# Step 4. Remove Empty lines
grep . "$tmpB" > "$tmpA"

# Step 3. Lines ending in \ are concatenated
awk '{if (sub(/\\$/,"")) printf "%s", $0; else print $0}' "$tmpA" > "${out}"

# Append additional overriding environment variables
echo "##From: $VALUES" >> "${out}"
cat "$VALUES" >> "${out}"
 
echo "Set ${out}" 2>&1
